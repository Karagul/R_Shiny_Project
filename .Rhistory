# Libraries that we need to use
library(readxl)
library(dplyr)
library(ggplot2)
###############################################################
# FUNCTIONS
###############################################################
# Help functions
source("C:\\MAIN\\NYCDSA\\R Shiny Project\\Shiny_Project_Functions.R")
# Read in the file and look at some descriptive statistics
file_name = "C:\\MAIN\\NYCDSA\\R Shiny Project\\Data_All_Assets_Compiled.xlsx"
daily_returns = read_excel(file_name, sheet = "Raw_Returns")
###############################################################
# FIRST GLANCE AT THE DATA
###############################################################
# Take a look at the data
head(daily_returns, n = 10)
# Get number of rows and columns
n_rows = nrow(daily_returns)
n_cols = ncol(daily_returns)
n_assets = n_cols - 1
# Check for missing values
sum(is.na(daily_returns))
# Check for outlier values
summary(daily_returns)
# We notice that there was a day where REITs lost 19.3% and
#   U.S. stocks lost 9.8%.  Which day(s) were this?
worst_loss_stocks_US = min(daily_returns$Stocks_US)
row_with_worst_loss_stocks_US = daily_returns[(daily_returns$Stocks_US == worst_loss_stocks_US),]
# Oct 15th, 2008 saw U.S. stocks decline by 9.8%, REITs decline
#   by 12.6%, and energy sector decline by 15%
# Read more about the atmosphere at that time here:
#   https://money.cnn.com/2008/10/15/markets/markets_newyork/
###############################################################
# Graphs
###############################################################
# As you can see, the cumulative return of U.S. stocks
#   from Aug 1999 to Jan 2020 was 252%, despite going through
#   two terrible corrections (dot-com and great recession)
#   Therefore stocks are an amazing investment
calculate_cumulative_return(daily_returns$Stocks_US)
plot_returns_histogram(daily_returns$Stocks_US)
calculate_min_var_portfolio(daily_returns,
print_description = TRUE,
plot_bar_chart = TRUE)
plot_portfolio_growth_over_time(daily_returns$Date, daily_returns$Stocks_US)
plot_returns_histogram(daily_returns$Stocks_US)
calculate_min_var_portfolio(daily_returns,
print_description = TRUE,
plot_bar_chart = TRUE)
plot_portfolio_growth_over_time(daily_returns$Date, daily_returns$Stocks_US)
# NYC Data Science Academy
# R Shiny Project
# Joe Lu, Joe.Zhou.Lu@gmail.com
# Import required libraries
library(dplyr)
library(ggplot2)
library(quadprog)
library(testit)
# Input: a vector of daily returns
#   Example: c(2, -1, 3) represents 2% return on day 1,
#   -1% on day 2, and 3% on day 3
# Output: the cumulative return after investing for all those days
#   Example: in this case, the cumulative return would be 4.01%
calculate_cumulative_return = function(returns_vector)
{
return(100*(prod(1 + returns_vector / 100) - 1))
}
# Given time series of returns, generate histogram showing distribution
plot_returns_histogram = function(return_series)
{
g = ggplot(data = data.frame(return_series), aes(x = return_series)) +
geom_histogram(binwidth = 0.1, color = "blue") +
labs(title = "Returns Distribution", x = "Daily Return (%)", y = "Count")
print(g)
}
########################
# generate_portfolio_returns(portfolio_allocation, returns matrix)
# Input: a dataframe of m+1 columns, where leftmost column is dates
#   followed by m columns of asset returns (for m assets)
# Output: min-variance portfolio for that time period of asset returns
# Calculate the covariance matrix for the entire 20 years
calculate_min_var_portfolio = function(returns_matrix,
print_description,
plot_bar_chart)
{
# Extract necessary parameters
n_rows = nrow(returns_matrix)
n_cols = ncol(returns_matrix)
n_assets = n_cols - 1
asset_names = colnames(returns_matrix)[2:n_cols]
date_1 = returns_matrix[[1,1]]
date_2 = returns_matrix[[n_rows,1]]
# Calculate the covariance matrix of asset returns during this period
cov_matrix = cov(returns_matrix[,2:n_cols])
# Calculate the minimum variable portfolio
aMat <- array(1, dim = c(1, n_assets))
bVec <- 1
zeros <- array(0, dim = c(n_assets, 1))
solQP <- solve.QP(cov_matrix, zeros, t(aMat), bVec, meq = 1)
# Optionally, print out an interpretion of the result
if (print_description)
{
print(paste0("Using returns data between ",date_1," and ",date_2,", the portfolio with the minimum variance is:"))
print(paste0(asset_names, ": ", round(100*solQP$solution,0), '%'))
}
# Optionally, make a bar plot
if (plot_bar_chart)
{
bar_chart = ggplot(data = data.frame(asset_names, solQP$solution),
aes(x = asset_names, y = 100*solQP$solution)) +
geom_bar(stat="identity", fill="seagreen4") +
ggtitle("Min Variance Portfolio Weights") +
xlab("Asset Class") + ylab("% Allocation") +
coord_flip()
print(bar_chart)
}
return(solQP$solution)
}
# Solution for 20y is: 22% US stocks, 9% developed markets, 0% EM
#   -3% REITs, 56% 30y Treasuries, 16% gold, 0% energy stocks
# Input: a series of dates (increasing) and series of corresponding returns
# Output: a graph of how $100 grows over this time period
plot_portfolio_growth_over_time = function(date_series, return_series)
{
print(date_series)
print(return_series)
# Verify that the length of the dates vector matches with return vector
assert(length(date_series) == length(return_series))
n_obs = length(date_series)
price_series = c(100.0*(1 + return_series[1]/100))
for (i in 2:n_obs)
{
price_series = append(price_series,
price_series[i-1]*(1 + return_series[i]/100))
}
assert(length(date_series) == length(price_series))
price_plot = ggplot(data = data.frame(date_series, price_series),
aes(x = date_series, y = price_series)) +
geom_line(color = "green", size = 1) +
ggtitle("If you had invested $100...") +
xlab("Time") + ylab("Portfolio value")
print(price_plot)
}
plot_portfolio_growth_over_time(daily_returns$Date, daily_returns$Stocks_US)
